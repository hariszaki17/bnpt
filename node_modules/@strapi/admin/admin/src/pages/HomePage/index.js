/*
 * HomePage
 *
 */

import React, { memo, useMemo } from 'react';
import { FormattedMessage } from 'react-intl';
import styled from 'styled-components';
import { Helmet } from 'react-helmet';
import { useHistory } from 'react-router-dom';
import { LoadingIndicatorPage, useGuidedTour } from '@strapi/helper-plugin';
import { Layout, Main, Box, Grid, GridItem } from '@strapi/design-system';
import useLicenseLimitNotification from 'ee_else_ce/hooks/useLicenseLimitNotification';
// import densusPath from './assets/densus-bg.png';
import { useModels } from '../../hooks';
import isGuidedTourCompleted from '../../components/GuidedTour/utils/isGuidedTourCompleted';
// import { FaReact } from 'react-icons/fa';
import bnpt from './assets/bnpt.png';
const LandingPage = () => {
  return (
    <Container>
      <Logo src={bnpt} alt="Company Logo" />
      <WelcomeText>Selamat Datang di CMS BNPT</WelcomeText>
      <DescriptionText>
        Content Management System ini adalah platform website yang dapat anda gunakan untuk mengatur konten-konten yang akan ditampilakan di museum anda.
      </DescriptionText>
    </Container>
  );
};


const DescriptionText = styled.p`
  font-size: 1rem;
  color: #646464;
  max-width: 600px;
  line-height: 1.5;
  margin: 0;
`;

// Styled components
const Container = styled.div`
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
height: 100vh;
padding: 20px;
text-align: center;
background: linear-gradient(135deg, #f6f6f9 0%, #e6e9ef 100%);
font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
`;

const Logo = styled.img`
  width: 200px;
  height: 200px;
  margin-bottom: 20px;
`;

const WelcomeText = styled.h1`
  font-size: 2.5rem;
  color: #282b30;
  font-weight: bold;
  margin-bottom: 10px;
`;


const HomePage = () => {
  // Temporary until we develop the menu API
  const { collectionTypes, singleTypes, isLoading: isLoadingForModels } = useModels();
  const { guidedTourState, isGuidedTourVisible, isSkipped } = useGuidedTour();
  useLicenseLimitNotification();

  const showGuidedTour =
    !isGuidedTourCompleted(guidedTourState) && isGuidedTourVisible && !isSkipped;

  const { push } = useHistory();
  const handleClick = (e) => {
    e.preventDefault();

    push('/plugins/content-type-builder/content-types/create-content-type');
  };

  const hasAlreadyCreatedContentTypes = useMemo(() => {
    const filterContentTypes = (contentTypes) => contentTypes.filter((c) => c.isDisplayed);

    return (
      filterContentTypes(collectionTypes).length > 1 || filterContentTypes(singleTypes).length > 0
    );
  }, [collectionTypes, singleTypes]);

  if (isLoadingForModels) {
    return <LoadingIndicatorPage />;
  }

  return (
    <Layout>
      <LandingPage>
      <FormattedMessage id="HomePage.helmet.title" defaultMessage="Homepage">
        {(title) => <Helmet title={title[0]} />}
      </FormattedMessage>
      </LandingPage>
    </Layout>
  );
};

export default memo(HomePage);
